  /*public List<List<Integer>> threeSum(int[] nums) {我的方法会超时，下面的那种更简单
        List<List<Integer>> ts=new ArrayList<List<Integer>>();
        if(nums.length<3)return ts;
        int len=nums.length;
        Arrays.sort(nums);
        int count=0;
        for(int i=0;i<len;i++)
        {
           if(i>0 && nums[i]==nums[i-1])continue;
            for(int j=i+1;j<len;j++)
            {if(j>i+1 && nums[j]==nums[j-1])continue;
                for(int k=j+1;k<len;k++)
                    if(nums[i]+nums[j]+nums[k]==0)
                    {if(k>j+1 && nums[k]==nums[k-1])continue;
                    List<Integer>tmp=new ArrayList<Integer>();
                     tmp.add(nums[i]);
                     tmp.add(nums[j]);
                     tmp.add(nums[k]);
                     ts.add(tmp);
                    }
            }
        }
        return ts;
    }*/




public List<List<Integer>> threeSum(int[] num) {
    Arrays.sort(num);
    List<List<Integer>> res = new LinkedList<>(); 
    for (int i = 0; i < num.length-2; i++) {
        if (i == 0 || (i > 0 && num[i] != num[i-1])) {
            int lo = i+1, hi = num.length-1, sum = 0 - num[i];
            while (lo < hi) {
                if (num[lo] + num[hi] == sum) {
                    res.add(Arrays.asList(num[i], num[lo], num[hi]));
                    while (lo < hi && num[lo] == num[lo+1]) lo++;
                    while (lo < hi && num[hi] == num[hi-1]) hi--;
                    lo++; hi--;
                } else if (num[lo] + num[hi] < sum) lo++;
                else hi--;
           }
        }
    }
    return res;
}
    
    
    
  
