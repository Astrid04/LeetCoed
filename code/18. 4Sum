我的解法
{public List<List<Integer>> fourSum(int[] nums, int target) {
        Arrays.sort(nums);
        List<List<Integer>> res = new ArrayList<List<Integer>>(); 
        int len=nums.length;
        if(len<4)return res;
     //   if(len==4){if(nums[0]+nums[1]+nums[2]+nums)}
        for(int i=0;i<len-3;i++)
        {
            if (i == 0 || (i > 0 && nums[i] != nums[i-1]))
            {int[] tmp=new int[len-i-1];
            tmp=Arrays.copyOfRange(nums, i+1,len);
            List<List<Integer>> get3 = threeSum(tmp,target-nums[i]) ;
            int len1=get3.size();
            
            for(int j=0;j<len1;j++)
            {List<Integer> n=get3.get(j);
             System.out.println(n);
            res.add(Arrays.asList(n.get(0), n.get(1), n.get(2),nums[i]));}
            }
        }
        return res;
    }
    
    public List<List<Integer>> threeSum(int[] num,int target) {
    List<List<Integer>> res = new ArrayList<List<Integer>>(); 
    for (int i = 0; i < num.length-2; i++) {
        if (i == 0 || (i > 0 && num[i] != num[i-1])) {
            int lo = i+1, hi = num.length-1, sum = target - num[i];
            while (lo < hi) {
                if (num[lo] + num[hi] == sum) {
                    res.add(Arrays.asList(num[i], num[lo], num[hi]));
                    while (lo < hi && num[lo] == num[lo+1]) lo++;
                    while (lo < hi && num[hi] == num[hi-1]) hi--;
                    lo++; hi--;
                } else if (num[lo] + num[hi] < sum) lo++;
                else hi--;
           }
        }
    }
    return res;
}
}


 public List<List<Integer>> fourSum(int[] num, int target) {/*others
        ArrayList<List<Integer>> ans = new ArrayList<>();
        if(num.length<4)return ans;
        Arrays.sort(num);
        for(int i=0; i<num.length-3; i++){
            if(num[i]+num[i+1]+num[i+2]+num[i+3]>target)break; //first candidate too large, search finished
            if(num[i]+num[num.length-1]+num[num.length-2]+num[num.length-3]<target)continue; //first candidate too small
            if(i>0&&num[i]==num[i-1])continue; //prevents duplicate result in ans list
            for(int j=i+1; j<num.length-2; j++){
                if(num[i]+num[j]+num[j+1]+num[j+2]>target)break; //second candidate too large
                if(num[i]+num[j]+num[num.length-1]+num[num.length-2]<target)continue; //second candidate too small
                if(j>i+1&&num[j]==num[j-1])continue; //prevents duplicate results in ans list
                int low=j+1, high=num.length-1;
                while(low<high){
                    int sum=num[i]+num[j]+num[low]+num[high];
                    if(sum==target){
                        ans.add(Arrays.asList(num[i], num[j], num[low], num[high]));
                        while(low<high&&num[low]==num[low+1])low++; //skipping over duplicate on low
                        while(low<high&&num[high]==num[high-1])high--; //skipping over duplicate on high
                        low++; 
                        high--;
                    }
                    //move window
                    else if(sum<target)low++; 
                    else high--;
                }
            }
        }
        return ans;
    }
