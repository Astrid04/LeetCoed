  public boolean hasCycle(ListNode head) {//方法一
       if(head==null || head.next==null)return false;
        ListNode slow=head;
        ListNode fast=head.next;
        while(fast!=slow)
        {
            if(fast==null || fast.next==null)return false;
            fast=fast.next.next;
            slow=slow.next;
        }
        return true;
    }
    
  public boolean hasCycle(ListNode head) {//方法二
 Set <ListNode> lset=new HashSet<>();
        while(head !=null)
        {
            if(lset.contains(head))return true;
            else lset.add(head);
            
            head=head.next;
        }
        return false;
        }
